{"version":3,"sources":["components/WindowLogIn/WindowLogin.module.css","components/WindowRegister/WindowRegister.module.css","components/WindowLogIn/WindowLogin.js","components/WindowRegister/WindowRegister.js","components/AppUnauthenticated/AppUnauth.js"],"names":["module","exports","WindowLogin","props","history","useHistory","setSession","useContext","AuthContext","useState","responceMsg","setResponce","openAlertSmall","setaopenAlertSmall","className","styles","Window","initialValues","username","password","onSubmit","values","setSubmitting","setTimeout","usr","pas","axios","get","server","encodeURIComponent","then","result","data","length","localStorage","setItem","id","push","pathname","catch","error","isSubmitting","form","title","htmlFor","inputLabel","type","name","placeholder","input","AlertSmall","status","text","cancelAction","disabled","submit","createUser","newUsr","a","post","response","console","log","SignupSchema","Yup","shape","min","max","required","pass","passCon","lastName","avatar","birthday","Bday","setFieldValue","useFormikContext","useField","field","placeholderText","selected","value","Date","onChange","val","dateText","WindowRegister","openAlert","setaopenAlert","useMutation","onSuccess","onError","insertUsr","validationSchema","validateOnChange","validateOnBlur","alert","submitForm","errors","Alert","bodyText","okText","okAction","showCancel","errorMessage","direction","sm","md","spacer","AppUnauth","path","WindowList"],"mappings":"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","file":"static/js/5.968c30db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Window\":\"WindowLogin_Window__2PLVU\",\"form\":\"WindowLogin_form__3o3pO\",\"title\":\"WindowLogin_title__3opDX\",\"inputLabel\":\"WindowLogin_inputLabel__2Puu4\",\"input\":\"WindowLogin_input__4hZRS\",\"submit\":\"WindowLogin_submit__1mcwC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Window\":\"WindowRegister_Window__jb86l\",\"form\":\"WindowRegister_form__ZrOul\",\"title\":\"WindowRegister_title__1-Hyg\",\"dateText\":\"WindowRegister_dateText__3Tv4a\",\"errorMessage\":\"WindowRegister_errorMessage__3kfF0\",\"spacer\":\"WindowRegister_spacer__kC1kU\",\"inputLabel\":\"WindowRegister_inputLabel__3iH2I\",\"input\":\"WindowRegister_input__38tNA\",\"submit\":\"WindowRegister_submit__1b32w\"};","import styles from \"./WindowLogin.module.css\";\nimport { server } from \"../../libs/const\";\nimport { useState } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport { Formik, Form, Field } from \"formik\";\n\nimport { AuthContext } from \"../../Context/Auth\";\nimport { useContext } from \"react\";\n\nimport AlertSmall from \"../Alert/AlertSmall\";\n\nimport axios from \"axios\";\n\nconst WindowLogin = (props) => {\n  let history = useHistory();\n  const { setSession } = useContext(AuthContext);\n\n  const [responceMsg, setResponce] = useState(\"\");\n  const [openAlertSmall, setaopenAlertSmall] = useState(false);\n\n  const setAccount = (usr, pas) => {\n    axios\n      .get(\n        `${server}users?username=${encodeURIComponent(\n          usr\n        )}&pass=${encodeURIComponent(pas)}`\n      )\n      .then(function (result) {\n        if (result.data.length > 0) {\n          setSession({ ...result.data[0] });\n          localStorage.setItem(\"rememberSessionID\", result.data[0].id);\n          history.push({ pathname: \"/List\" });\n        } else {\n          setResponce(\"Incorrect Username or Password\");\n        }\n      })\n      .catch(function (error) {\n        setaopenAlertSmall(true);\n      });\n  };\n\n  return (\n    <div className={styles.Window}>\n      <Formik\n        initialValues={{ username: \"\", password: \"\" }}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            setAccount(values.username, values.password);\n            setSubmitting(false);\n          }, 400);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form className={styles.form}>\n            <h1 className={styles.title}>LOG IN</h1>\n\n            <label htmlFor=\"username\" className={styles.inputLabel}>\n              Username:\n            </label>\n            <Field\n              type=\"text\"\n              id=\"username\"\n              name=\"username\"\n              placeholder=\"Username:\"\n              className={styles.input}\n            />\n\n            <label htmlFor=\"password\" className={styles.inputLabel}>\n              Password:\n            </label>\n            <Field\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Password:\"\n              className={styles.input}\n            />\n\n            {openAlertSmall ? (\n              <AlertSmall\n                status=\"error\"\n                title=\"Conection Error\"\n                text=\"Login Failed.\"\n                cancelAction={() => setaopenAlertSmall(false)}\n              />\n            ) : (\n              <p>{responceMsg}</p>\n            )}\n\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className={styles.submit}\n            >\n              Log In\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default WindowLogin;\n","import styles from \"./WindowRegister.module.css\";\nimport { server } from \"../../libs/const\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport { Formik, Form, Field, useField, useFormikContext } from \"formik\";\n\nimport * as Yup from \"yup\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport { useMutation } from \"react-query\";\n\nimport { useState } from \"react\";\nimport AlertBasic from \"../Alert/Alert\";\nimport AlertSmall from \"../Alert/AlertSmall\";\n\nimport axios from \"axios\";\n\nimport { Flex } from \"@chakra-ui/react\";\n\nconst createUser = async (newUsr) => {\n  axios\n    .post(server + \"users\", { ...newUsr })\n    .then(function (response) {\n      return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n};\n\nconst SignupSchema = Yup.object().shape({\n  username: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(20, \"Too Long!\")\n    .required(\"Required\"),\n  pass: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(20, \"Too Long!\")\n    .required(\"Required\"),\n  passCon: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(20, \"Too Long!\")\n    .required(\"Required\"),\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(20, \"Too Long!\")\n    .required(\"Required\"),\n  lastName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(20, \"Too Long!\")\n    .required(\"Required\"),\n  avatar: Yup.string(),\n  birthday: Yup.date().required(\"Required\"),\n});\n\nconst Bday = ({ ...props }) => {\n  const { setFieldValue } = useFormikContext();\n  const [field] = useField(props);\n\n  return (\n    <DatePicker\n      {...field}\n      {...props}\n      placeholderText=\"Birthday\"\n      className={styles.input}\n      selected={(field.value && new Date(field.value)) || null}\n      onChange={(val) => {\n        setFieldValue(field.name, val);\n      }}\n    >\n      <p className={styles.dateText}>\n        Pick your <b>Birthday</b>\n      </p>\n    </DatePicker>\n  );\n};\n\nfunction WindowRegister(props) {\n  let history = useHistory();\n  const [openAlert, setaopenAlert] = useState(false);\n  const [openAlertSmall, setaopenAlertSmall] = useState(false);\n\n  const [insertUsr] = useMutation(createUser, {\n    onSuccess: () => {\n      setaopenAlert(true);\n    },\n    onError: () => {\n      setaopenAlertSmall(true);\n    },\n  });\n\n  const submitForm = (values) => {\n    console.log(\"values\");\n    if (values.pass !== values.passCon) {\n      alert(\"The password and its confirmation must be the same\");\n      return;\n    }\n\n    axios\n      .get(`${server}users?username=${encodeURIComponent(values.username)}`)\n      .then(function (result) {\n        if (result.data.length === 0) {\n          insertUsr(values);\n        } else {\n          alert(\"That username already exists\");\n        }\n      })\n      .catch(function (error) {\n        setaopenAlertSmall(true);\n      });\n  };\n\n  return (\n    <div className={styles.Window}>\n      <Formik\n        initialValues={{\n          username: \"\",\n          pass: \"\",\n          passCon: \"\",\n          name: \"\",\n          lastName: \"\",\n          avatar: \"\",\n          birthday: \"\",\n        }}\n        validationSchema={SignupSchema}\n        validateOnChange={false}\n        validateOnBlur={false}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            submitForm(values);\n            setSubmitting(false);\n          }, 400);\n        }}\n      >\n        {({ errors, isSubmitting }) => (\n          <Form className={styles.form}>\n            {openAlert ? (\n              <AlertBasic\n                title=\"User Registered\"\n                bodyText=\"Your account has been created.\"\n                okText=\"Go to LogIn\"\n                okAction={() => history.push(\"/Login\")}\n                showCancel={false}\n              />\n            ) : null}\n\n            <h1 className={styles.title}>REGISTER</h1>\n\n            <label htmlFor=\"username\" className={styles.inputLabel}>\n              Username:\n              <Field\n                type=\"text\"\n                id=\"username\"\n                name=\"username\"\n                placeholder=\"Username:\"\n                className={styles.input}\n              />\n              {errors.username ? (\n                <span className={styles.errorMessage}>\n                  {errors.username}\n                </span>\n              ) : null}\n            </label>\n\n            <Flex direction={{ sm: \"column\", md: \"row\" }}>\n              <label htmlFor=\"pass\" className={styles.inputLabel}>\n                Password:\n                <Field\n                  type=\"password\"\n                  id=\"pass\"\n                  name=\"pass\"\n                  placeholder=\"Password:\"\n                  className={styles.input}\n                />\n                {errors.pass ? (\n                  <span className={styles.errorMessage}>\n                    {errors.pass}\n                  </span>\n                ) : null}\n              </label>\n\n              <span className={styles.spacer} />\n\n              <label htmlFor=\"passCon\" className={styles.inputLabel}>\n                Confirm Password:\n                <Field\n                  type=\"password\"\n                  id=\"passCon\"\n                  name=\"passCon\"\n                  placeholder=\" Password Confirm:\"\n                  className={styles.input}\n                />\n                {errors.passCon ? (\n                  <span className={styles.errorMessage}>\n                    {errors.passCon}\n                  </span>\n                ) : null}\n              </label>\n            </Flex>\n\n            <Flex direction={{ sm: \"column\", md: \"row\" }}>\n              <label htmlFor=\"name\" className={styles.inputLabel}>\n                First Name:\n                <Field\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  placeholder=\"First Name:\"\n                  className={styles.input}\n                />\n                {errors.name ? (\n                  <span className={styles.errorMessage}>\n                    {errors.name}\n                  </span>\n                ) : null}\n              </label>\n\n              <span className={styles.spacer} />\n\n              <label htmlFor=\"lastName\" className={styles.inputLabel}>\n                Last Name:\n                <Field\n                  type=\"text\"\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  placeholder=\"Last Name:\"\n                  className={styles.input}\n                />\n                {errors.lastName ? (\n                  <span className={styles.errorMessage}>{errors.lastName}</span>\n                ) : null}\n              </label>\n            </Flex>\n\n            <label htmlFor=\"birthday\" className={styles.inputLabel}>\n              Birthday:\n              <Bday id=\"birthday\" name=\"birthday\" />\n              {errors.birthday ? (\n                <span className={styles.errorMessage}>\n                  {errors.birthday}\n                </span>\n              ) : null}\n            </label>\n\n            {openAlertSmall ? (\n              <AlertSmall\n                status=\"error\"\n                title=\"Conection Error\"\n                text=\"The Account could not be created.\"\n                cancelAction={() => setaopenAlertSmall(false)}\n              />\n            ) : null}\n\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className={styles.submit}\n            >\n              Register\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default WindowRegister;\n","import WindowList from \"../WindowList/WindowList\";\nimport WindowLogin from \"../WindowLogIn/WindowLogin\";\nimport WindowRegister from \"../WindowRegister/WindowRegister\";\nimport { Switch, Route } from \"react-router-dom\";\n\n\nfunction AppUnauth () {\n  console.log(\"unauthorized\");\n  return (\n        <Switch>\n          <Route path=\"/Register\">\n            <WindowRegister  />\n          </Route>\n          <Route path=\"/Login\">\n            <WindowLogin />\n          </Route>\n          <Route>\n            <WindowList />\n          </Route>\n        </Switch>\n  );\n}\n\nexport default AppUnauth;\n"],"sourceRoot":""}